export const IconPlusButton: React.FC = () => {
  return (
    <svg
      width="14"
      height="14"
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="plus">
        <path
          id="Vector"
          d="M7 2.19995V11.7999"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
          strokeLinejoin="round"
        />
        <path
          id="Vector_2"
          d="M2.19995 7H11.7999"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
          strokeLinejoin="round"
        />
      </g>
    </svg>
  )
}

export const BtnNextSlide: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M5 12H19"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M12 5L19 12L12 19"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const BtnPrevSlide: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M19 12H5"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M12 19L5 12L12 5"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const IconPlay: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="58"
      height="58"
      viewBox="0 0 58 58"
      fill="none"
    >
      <path
        d="M17 7.3999L50.6 28.9999L17 50.5999V7.3999Z"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const Logo: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="47"
      height="33"
      viewBox="0 0 47 33"
      fill="none"
    >
      <path
        d="M40.5928 0.000301835C42.3952 0.000301835 44.1516 0.0595121 45.256 1.64339C45.8286 2.36214 46.1818 3.22084 46.2761 4.12283C46.3017 9.62939 46.2931 15.136 46.2846 20.6425C46.2804 23.3958 46.2761 26.1491 46.2761 28.9024C46.257 29.8831 45.8794 30.8257 45.21 31.5638C44.5406 32.3019 43.6224 32.7879 42.6176 32.9361C41.525 33.1239 40.3995 32.8924 39.4811 32.2909C38.5628 31.6895 37.9241 30.7658 37.7013 29.7165C37.566 29.1131 37.4915 28.4983 37.4789 27.881V12.7083L37.2948 12.6269C37.1103 12.9376 36.8993 13.2483 36.6874 13.5602C36.5207 13.8057 36.3534 14.0519 36.1981 14.2996C32.7672 19.821 29.3209 25.335 25.8593 30.8415C25.4758 31.5137 24.9062 32.0697 24.2141 32.4475C23.522 32.8252 22.7346 33.0097 21.9401 32.9805C21.3462 32.9531 20.7639 32.8123 20.2268 32.5662C19.6897 32.3201 19.2086 31.9736 18.8112 31.5468C18.4139 31.12 18.1083 30.6214 17.912 30.0798C17.7158 29.5382 17.6329 28.9644 17.668 28.3917V13.5151L17.4149 13.4485L14.7689 17.4896C13.3875 19.5764 12.0228 21.6646 10.6593 23.7511C8.95671 26.3563 7.25598 28.9587 5.52686 31.552C5.33361 31.8984 5.06571 32.2007 4.74119 32.4387C4.41667 32.6768 4.04306 32.8449 3.64554 32.9319C3.24801 33.0188 2.83579 33.0226 2.43663 32.9429C2.03747 32.8632 1.66065 32.7019 1.33153 32.4698C0.996244 32.2477 0.710072 31.9635 0.489656 31.6336C0.269239 31.3038 0.118977 30.935 0.0476083 30.5486C-0.0237605 30.1623 -0.0148113 29.7661 0.0739353 29.3831C0.162682 29.0001 0.329455 28.6379 0.564554 28.3177C4.40453 22.4312 8.2445 16.5397 12.0845 10.6434C12.8923 9.40455 13.704 8.16696 14.5158 6.92909C15.6926 5.13476 16.8698 3.33986 18.0362 1.53977C18.313 1.06619 18.717 0.673315 19.2055 0.402422C19.6941 0.13153 20.2492 -0.00737543 20.8126 0.000301835C22.5076 0.000301835 24.1029 0.111321 25.3147 1.48056C26.0326 2.24215 26.4317 3.23393 26.4345 4.26345V18.7034L26.6876 18.7552C27.6336 17.3243 28.5744 15.8958 29.5101 14.4698C32.3095 10.1401 35.1166 5.80292 37.9468 1.48056C38.2151 1.03204 38.6007 0.659288 39.065 0.399539C39.5293 0.13979 40.0561 0.00212955 40.5928 0.000301835Z"
        fill="white"
      />
      <path
        d="M2.16751 15.8026C1.97894 16.0954 1.68335 16.3094 1.33918 16.4021C0.671912 16.4909 0.380463 16.106 0.395802 15.4325V1.8585C0.369002 1.61728 0.398653 1.37334 0.482569 1.14465C0.566485 0.915971 0.702524 0.708381 0.880656 0.537194C1.05879 0.366007 1.27447 0.235589 1.51179 0.155558C1.74911 0.0755263 2.00202 0.0479233 2.25187 0.0747841C3.22025 0.0747841 4.18947 0.0690343 5.15926 0.0632811C7.10055 0.0517646 9.04412 0.0402346 10.9877 0.0747841C11.4728 0.129711 11.9163 0.366253 12.2225 0.7335C12.3836 0.940737 12.2072 1.53284 12.0001 1.83629C8.7379 6.49912 5.46037 11.1545 2.16751 15.8026Z"
        fill="white"
      />
    </svg>
  )
}

export const IconInstagram: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M17.34 5.46C17.1027 5.46 16.8707 5.53038 16.6733 5.66224C16.476 5.79409 16.3222 5.98151 16.2313 6.20078C16.1405 6.42005 16.1168 6.66133 16.1631 6.89411C16.2094 7.12689 16.3236 7.34071 16.4915 7.50853C16.6593 7.67635 16.8731 7.79064 17.1059 7.83694C17.3387 7.88324 17.5799 7.85948 17.7992 7.76866C18.0185 7.67783 18.2059 7.52402 18.3378 7.32668C18.4696 7.12935 18.54 6.89734 18.54 6.66C18.54 6.34174 18.4136 6.03652 18.1885 5.81147C17.9635 5.58643 17.6583 5.46 17.34 5.46ZM21.94 7.88C21.9206 7.0503 21.7652 6.2294 21.48 5.45C21.2257 4.78313 20.83 4.17928 20.32 3.68C19.8248 3.16743 19.2196 2.77418 18.55 2.53C17.7727 2.23616 16.9508 2.07721 16.12 2.06C15.06 2 14.72 2 12 2C9.28 2 8.94 2 7.88 2.06C7.04915 2.07721 6.22734 2.23616 5.45 2.53C4.78168 2.77665 4.17693 3.16956 3.68 3.68C3.16743 4.17518 2.77418 4.78044 2.53 5.45C2.23616 6.22734 2.07721 7.04915 2.06 7.88C2 8.94 2 9.28 2 12C2 14.72 2 15.06 2.06 16.12C2.07721 16.9508 2.23616 17.7727 2.53 18.55C2.77418 19.2196 3.16743 19.8248 3.68 20.32C4.17693 20.8304 4.78168 21.2234 5.45 21.47C6.22734 21.7638 7.04915 21.9228 7.88 21.94C8.94 22 9.28 22 12 22C14.72 22 15.06 22 16.12 21.94C16.9508 21.9228 17.7727 21.7638 18.55 21.47C19.2196 21.2258 19.8248 20.8326 20.32 20.32C20.8322 19.8226 21.2283 19.2182 21.48 18.55C21.7652 17.7706 21.9206 16.9497 21.94 16.12C21.94 15.06 22 14.72 22 12C22 9.28 22 8.94 21.94 7.88ZM20.14 16C20.1327 16.6348 20.0178 17.2637 19.8 17.86C19.6403 18.2952 19.3839 18.6884 19.05 19.01C18.7256 19.3405 18.3332 19.5964 17.9 19.76C17.3037 19.9778 16.6748 20.0927 16.04 20.1C15.04 20.15 14.67 20.16 12.04 20.16C9.41 20.16 9.04 20.16 8.04 20.1C7.38089 20.1123 6.72459 20.0109 6.1 19.8C5.68578 19.6281 5.31136 19.3728 5 19.05C4.66809 18.7287 4.41484 18.3352 4.26 17.9C4.01586 17.2952 3.88044 16.6519 3.86 16C3.86 15 3.8 14.63 3.8 12C3.8 9.37 3.8 9 3.86 8C3.86448 7.35106 3.98295 6.70795 4.21 6.1C4.38605 5.67791 4.65627 5.30166 5 5C5.30381 4.65617 5.67929 4.3831 6.1 4.2C6.70955 3.98004 7.352 3.86508 8 3.86C9 3.86 9.37 3.8 12 3.8C14.63 3.8 15 3.8 16 3.86C16.6348 3.86728 17.2637 3.98225 17.86 4.2C18.3144 4.36865 18.7223 4.64285 19.05 5C19.3777 5.30718 19.6338 5.68273 19.8 6.1C20.0223 6.70893 20.1373 7.35178 20.14 8C20.19 9 20.2 9.37 20.2 12C20.2 14.63 20.19 15 20.14 16ZM12 6.87C10.9858 6.87198 9.99496 7.17453 9.15265 7.73942C8.31035 8.30431 7.65438 9.1062 7.26763 10.0438C6.88089 10.9813 6.78072 12.0125 6.97979 13.0069C7.17886 14.0014 7.66824 14.9145 8.38608 15.631C9.10392 16.3474 10.018 16.835 11.0129 17.0321C12.0077 17.2293 13.0387 17.1271 13.9755 16.7385C14.9123 16.35 15.7129 15.6924 16.2761 14.849C16.8394 14.0056 17.14 13.0142 17.14 12C17.1413 11.3251 17.0092 10.6566 16.7512 10.033C16.4933 9.40931 16.1146 8.84281 15.6369 8.36605C15.1592 7.88929 14.5919 7.51168 13.9678 7.25493C13.3436 6.99818 12.6749 6.86736 12 6.87ZM12 15.33C11.3414 15.33 10.6976 15.1347 10.15 14.7688C9.60234 14.4029 9.17552 13.8828 8.92348 13.2743C8.67144 12.6659 8.6055 11.9963 8.73398 11.3503C8.86247 10.7044 9.17963 10.111 9.64533 9.64533C10.111 9.17963 10.7044 8.86247 11.3503 8.73398C11.9963 8.6055 12.6659 8.67144 13.2743 8.92348C13.8828 9.17552 14.4029 9.60234 14.7688 10.15C15.1347 10.6976 15.33 11.3414 15.33 12C15.33 12.4373 15.2439 12.8703 15.0765 13.2743C14.9092 13.6784 14.6639 14.0454 14.3547 14.3547C14.0454 14.6639 13.6784 14.9092 13.2743 15.0765C12.8703 15.2439 12.4373 15.33 12 15.33Z"
        fill="#BFBFBF"
      />
    </svg>
  )
}

export const IconLinkedin: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M3 5.97474C3 5.40234 3.20271 4.93012 3.60811 4.55808C4.01351 4.18602 4.54055 4 5.18919 4C5.82626 4 6.34169 4.18315 6.73552 4.54949C7.14092 4.92727 7.34363 5.41951 7.34363 6.02626C7.34363 6.57575 7.14672 7.03365 6.7529 7.39999C6.3475 7.77777 5.81467 7.96666 5.15444 7.96666H5.13707C4.49999 7.96666 3.98456 7.77777 3.59073 7.39999C3.19691 7.02222 3 6.54713 3 5.97474ZM3.22587 21V9.52928H7.08301V21H3.22587ZM9.22008 21H13.0772V14.5949C13.0772 14.1942 13.1236 13.8852 13.2162 13.6677C13.3784 13.2784 13.6245 12.9493 13.9546 12.6803C14.2847 12.4113 14.6988 12.2768 15.1969 12.2768C16.4942 12.2768 17.1429 13.1411 17.1429 14.8697V21H21V14.4232C21 12.7289 20.5946 11.4439 19.7838 10.5682C18.973 9.69241 17.9016 9.25454 16.5695 9.25454C15.0753 9.25454 13.9112 9.88989 13.0772 11.1606V11.1949H13.0598L13.0772 11.1606V9.52928H9.22008C9.24324 9.89561 9.25483 11.0347 9.25483 12.9464C9.25483 14.8582 9.24324 17.5427 9.22008 21Z"
        fill="#BFBFBF"
      />
    </svg>
  )
}

export const IconYouTube: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M22.54 6.42C22.4212 5.94541 22.1793 5.51057 21.8387 5.15941C21.498 4.80824 21.0708 4.55318 20.6 4.42C18.88 4 12 4 12 4C12 4 5.12001 4 3.40001 4.46C2.92925 4.59318 2.50198 4.84824 2.16135 5.19941C1.82072 5.55057 1.5788 5.98541 1.46001 6.46C1.14522 8.20556 0.991243 9.97631 1.00001 11.75C0.988786 13.537 1.14277 15.3213 1.46001 17.08C1.59097 17.5398 1.83831 17.9581 2.17815 18.2945C2.51799 18.6308 2.93883 18.8738 3.40001 19C5.12001 19.46 12 19.46 12 19.46C12 19.46 18.88 19.46 20.6 19C21.0708 18.8668 21.498 18.6118 21.8387 18.2606C22.1793 17.9094 22.4212 17.4746 22.54 17C22.8524 15.2676 23.0063 13.5103 23 11.75C23.0112 9.96295 22.8572 8.1787 22.54 6.42V6.42Z"
        stroke="#BFBFBF"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
        fill="#BFBFBF"
      />
      <path
        d="M9.75 15.02L15.5 11.75L9.75 8.48001V15.02Z"
        stroke="#BFBFBF"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const IconFacebook: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M15.12 5.32003H17V2.14003C16.0897 2.04538 15.1751 1.99865 14.26 2.00003C11.54 2.00003 9.67999 3.66003 9.67999 6.70003V9.32003H6.60999V12.88H9.67999V22H13.36V12.88H16.42L16.88 9.32003H13.36V7.05003C13.36 6.00003 13.64 5.32003 15.12 5.32003Z"
        fill="#BFBFBF"
      />
    </svg>
  )
}

export const ArrowDown: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      viewBox="0 0 32 32"
      fill="none"
    >
      <path
        d="M16 5.33331V24"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M25.3334 16L16.0001 25.3333L6.66675 16"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
      />
    </svg>
  )
}

export const IconPlus: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="14"
      height="14"
      viewBox="0 0 14 14"
      fill="none"
    >
      <path
        d="M7 2.2002V11.8002"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M2.2002 7H11.8002"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const IconX: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M15 9L9 15"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M9 9L15 15"
        stroke="#040636"
        strokeWidth="1.4"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const IconArrowUp: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        d="M10 16.4001L10 5.20015"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M4.4001 10L10.0001 4.4L15.6001 10"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
      />
    </svg>
  )
}

export const IconArrowDown: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
    >
      <path
        d="M10 3.59985L10 14.7999"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M4.4001 10L10.0001 15.6L15.6001 10"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
      />
    </svg>
  )
}

export const IconDowload: React.FC = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
    >
      <g clip-path="url(#clip0_2273_1702)">
        <path
          d="M8 0.666626L8 9.99996"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
          strokeLinejoin="round"
        />
        <path
          d="M12.6665 13.3334L3.33317 13.3334"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
          strokeLinejoin="round"
        />
        <path
          d="M12.6668 5.66663L8.00016 10.3333L3.3335 5.66663"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
        />
      </g>
      <defs>
        <clipPath id="clip0_2273_1702">
          <rect width="16" height="16" fill="white" />
        </clipPath>
      </defs>
    </svg>
  )
}

export const ArrowRightLi = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="8"
      height="10"
      viewBox="0 0 8 10"
      fill="none"
    >
      <path
        d="M0.5 8.19575V1.80425C0.5 1.01881 1.36395 0.539969 2.03 0.956249L7.1432 4.152C7.76987 4.54367 7.76987 5.45633 7.1432 5.848L2.03 9.04375C1.36395 9.46003 0.5 8.98119 0.5 8.19575Z"
        fill="#282828"
      />
    </svg>
  )
}

export const ArrowDownBtn = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M6 9L12 15L18 9"
        stroke="black"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const ArrowExternal = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
    >
      <g clip-path="url(#clip0_2507_1072)">
        <path
          d="M4 11.9236L12 3.92358"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
          strokeLinejoin="round"
        />
        <path
          d="M4.23297 3.45221L12.4707 3.45221L12.4707 11.6899"
          stroke="#282828"
          strokeWidth="1.5"
          strokeLinecap="square"
        />
      </g>
      <defs>
        <clipPath id="clip0_2507_1072">
          <rect width="16" height="16" fill="white" />
        </clipPath>
      </defs>
    </svg>
  )
}

export const IconArrowDownContact = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
    >
      <path
        d="M10 15L20 25L30 15"
        stroke="black"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const IconArrowRightSubmit = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
    >
      <path
        d="M3 7.66663L12.3333 7.66663"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M8.33203 3.00004L12.9987 7.66671L8.33203 12.3334"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
      />
    </svg>
  )
}

export const MekalLogo = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="73"
      height="16"
      viewBox="0 0 73 16"
      fill="none"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M59.2789 1.09296C58.7871 0.196806 57.959 0.0175759 56.994 0.0175759C56.67 0.00675006 56.3497 0.0869251 56.0716 0.248454C55.7935 0.409984 55.5694 0.645986 55.4264 0.928065C53.7233 3.82203 52.009 6.71003 50.2837 9.59205C50.0795 9.93353 49.8727 10.2724 49.6581 10.6238C49.5191 10.8515 49.3768 11.0845 49.23 11.327C49.195 11.2768 49.1644 11.2338 49.1371 11.1954C49.0806 11.116 49.0381 11.0565 49.0008 10.9936C48.7608 10.5738 48.5233 10.1532 48.2858 9.73268L48.2854 9.732L48.285 9.73131L48.2846 9.73063C47.7905 8.85576 47.2966 7.98134 46.7825 7.11509C46.6994 7.00132 46.6573 6.86419 46.6626 6.72489C46.6679 6.58559 46.7205 6.45187 46.812 6.3444L46.9038 6.21481C47.6831 5.11448 48.463 4.01314 49.1745 2.88526C49.3718 2.56898 49.4802 2.20809 49.4888 1.83855C49.4734 1.42545 49.3213 1.02811 49.055 0.70532C48.7887 0.382531 48.4222 0.151445 48.0099 0.0462527C47.6112 -0.0300115 47.1982 0.009592 46.8226 0.160094C46.447 0.310595 46.1257 0.56529 45.8988 0.892219C45.0661 2.19961 44.2387 3.51207 43.4121 4.82321L42.9411 5.57013C42.7514 5.86546 42.5559 6.15706 42.3602 6.44897C42.2851 6.56096 42.2099 6.67299 42.1351 6.78531C42.056 5.62 42.047 4.48384 42.0381 3.35283V3.3527L42.0381 3.35068C42.0361 3.10816 42.0342 2.86587 42.0316 2.62358C42.0267 2.23826 41.9847 1.85422 41.9059 1.47651C41.6952 0.451313 40.268 -0.279946 39.2661 0.103606C38.8125 0.258262 38.423 0.551641 38.1563 0.939553C37.8895 1.32746 37.76 1.7889 37.7873 2.25437V13.5638C37.7761 13.9206 37.826 14.2767 37.9351 14.6177C38.0957 15.1056 38.4448 15.5144 38.9094 15.7583C39.3739 16.0022 39.9178 16.0623 40.427 15.926C41.5362 15.5998 41.9872 14.9439 42.0427 13.8398C42.0673 13.3045 42.0591 12.7692 42.0509 12.2339C42.0468 11.9663 42.0427 11.6986 42.0427 11.431C42.0234 11.2898 42.0478 11.1463 42.1129 11.0187C42.3832 10.6598 42.683 10.3123 42.9923 9.95392L42.9924 9.95389L42.9924 9.95386L42.9924 9.95384L42.9929 9.95323C43.1066 9.82154 43.2215 9.68837 43.3367 9.55262C43.3882 9.61095 43.4363 9.67198 43.4809 9.73543C43.7598 10.2482 44.038 10.7617 44.3163 11.2752L44.3163 11.2752L44.3163 11.2752L44.3163 11.2753C44.9639 12.4704 45.6117 13.6658 46.2685 14.8542C46.4738 15.1957 46.7674 15.4794 47.1203 15.6773C47.4732 15.8752 47.8732 15.9804 48.2809 15.9826C48.6885 15.9847 49.0897 15.8838 49.4448 15.6897C49.8 15.4956 50.0967 15.215 50.3059 14.8758C51.1382 13.4923 51.9598 12.0896 52.7816 10.6867L52.7816 10.6867L52.7817 10.6865L52.7819 10.6861L52.7827 10.6849L52.783 10.6843C53.2383 9.90698 53.6937 9.12958 54.1509 8.35536L55.2601 6.52004L55.3821 6.54514V6.98963V13.9545C55.389 14.4785 55.6024 14.9801 55.9783 15.3566C56.3543 15.7331 56.8644 15.9561 57.4044 15.9798C57.7025 15.986 57.9988 15.9327 58.2747 15.8232C58.5507 15.7137 58.8005 15.5503 59.0086 15.3432C59.2166 15.1361 59.3785 14.8897 59.4842 14.6194C59.5898 14.349 59.637 14.0605 59.6227 13.7717V2.24361C59.5991 1.83983 59.4815 1.44646 59.2789 1.09296ZM21.8155 0.813357C21.2831 0.0462527 20.4365 0.017576 19.5676 0.017576C19.3089 0.0184612 19.055 0.0851332 18.8312 0.210935C18.6073 0.336736 18.4215 0.517265 18.2921 0.734496C16.9279 2.8279 15.5747 4.92848 14.2252 7.02547C13.7742 7.7161 13.3207 8.40793 12.8647 9.10095L12.7427 9.07586V8.62062V2.08231C12.7413 1.58369 12.5489 1.10335 12.2029 0.734496C11.6187 0.0713449 10.8497 0.017576 10.0327 0.017576C9.76107 0.0138577 9.49346 0.0811325 9.25795 0.212331C9.02245 0.34353 8.82774 0.533808 8.69428 0.763173C8.13203 1.63496 7.5646 2.50424 6.99735 3.37324L6.99733 3.37327L6.99731 3.3733L6.99729 3.37333C6.60595 3.97286 6.21469 4.57224 5.82528 5.17223C3.97423 8.02796 2.12319 10.8813 0.272141 13.7323C0.158813 13.8874 0.0784203 14.0627 0.0356403 14.2482C-0.00713973 14.4337 -0.0114537 14.6256 0.0229494 14.8128C0.0573525 14.9999 0.129786 15.1785 0.236037 15.3382C0.342288 15.498 0.480236 15.6356 0.641858 15.7432C0.800509 15.8556 0.982157 15.9337 1.17457 15.9723C1.36698 16.0109 1.56569 16.0091 1.75732 15.967C1.94894 15.9249 2.12904 15.8434 2.28547 15.7282C2.44191 15.6129 2.57105 15.4665 2.66421 15.2987C3.49772 14.0427 4.31756 12.7823 5.13827 11.5205L5.13833 11.5205L5.13838 11.5204C5.79563 10.5099 6.45344 9.4986 7.11929 8.48799L8.39481 6.53079L8.51682 6.56306V7.10433V13.7681C8.49986 14.0455 8.53984 14.3234 8.63443 14.5857C8.72903 14.848 8.87636 15.0895 9.06789 15.2962C9.25943 15.5029 9.49136 15.6707 9.75025 15.7899C10.0091 15.9091 10.2899 15.9773 10.5761 15.9906C10.9592 16.0047 11.3387 15.9153 11.6723 15.7324C12.0059 15.5494 12.2805 15.2802 12.4654 14.9546C14.134 12.2877 15.7953 9.61714 17.4492 6.94302C17.524 6.82308 17.6047 6.70383 17.685 6.58497L17.685 6.58494L17.685 6.58491C17.7872 6.43383 17.8889 6.28336 17.9779 6.1329L18.0666 6.17233V6.63833V13.5208C18.0726 13.8198 18.1085 14.1175 18.1738 14.4097C18.2812 14.9179 18.5891 15.3653 19.0317 15.6566C19.4744 15.9479 20.017 16.06 20.5437 15.969C21.028 15.8973 21.4706 15.6619 21.7933 15.3044C22.116 14.9469 22.298 14.4904 22.3072 14.0154C22.3072 12.682 22.3093 11.3485 22.3113 10.015C22.3155 7.34808 22.3196 4.68114 22.3072 2.0142C22.2618 1.57735 22.0915 1.16146 21.8155 0.813357ZM31.0695 12.1761C31.9667 12.1865 32.8638 12.1968 33.761 12.1658C34.0028 12.1581 34.2437 12.1974 34.4696 12.2813C34.6955 12.3652 34.9018 12.492 35.0765 12.6543C35.2511 12.8166 35.3905 13.0111 35.4865 13.2264C35.5825 13.4417 35.6331 13.6734 35.6355 13.9079C35.6355 14.1457 35.5867 14.3811 35.492 14.6005C35.3973 14.8198 35.2584 15.0187 35.0836 15.1855C34.9088 15.3523 34.7015 15.4837 34.4738 15.5721C34.2461 15.6604 34.0026 15.704 33.7573 15.7002H26.8843C26.6325 15.7081 26.3817 15.666 26.1473 15.5765C25.9129 15.4871 25.6998 15.3521 25.5212 15.1799C25.3425 15.0077 25.2021 14.8019 25.1084 14.5751C25.0148 14.3484 24.9699 14.1055 24.9766 13.8613V2.16833C24.9756 1.92287 25.025 1.67968 25.1221 1.45298C25.2192 1.22628 25.362 1.02063 25.542 0.848067C25.7221 0.675501 25.9358 0.539482 26.1707 0.447968C26.4057 0.356454 26.657 0.311283 26.9102 0.315098C27.4869 0.336606 28.0637 0.336606 28.6405 0.336606H30.3707C30.5605 0.336606 30.7503 0.336208 30.9401 0.335809C31.3197 0.335013 31.6992 0.334216 32.0788 0.336606C32.6482 0.340191 33.2138 0.336606 33.7832 0.315098C34.2628 0.31483 34.7237 0.495273 35.0686 0.818325C35.4135 1.14138 35.6155 1.58175 35.6318 2.04646C35.6433 2.28268 35.6052 2.51871 35.5196 2.74017C35.434 2.96162 35.3028 3.16387 35.134 3.33457C34.9652 3.50528 34.7623 3.64088 34.5377 3.73311C34.3131 3.82533 34.0715 3.87226 33.8276 3.87102H29.9234C29.2616 3.87102 29.2616 3.87102 29.2616 4.53058V5.60596C29.2468 5.90348 29.3577 5.99668 29.6683 5.99668C30.0133 5.99668 30.3584 6.00067 30.7035 6.00465C31.3936 6.01262 32.0837 6.02058 32.7739 5.99668C33.2486 5.99947 33.7032 6.18281 34.04 6.50727C34.3767 6.83173 34.5686 7.27138 34.5744 7.73163C34.5833 7.96002 34.5453 8.18786 34.4628 8.40193C34.3802 8.61601 34.2546 8.81208 34.0934 8.97878C33.9321 9.14548 33.7383 9.2795 33.5232 9.37307C33.3082 9.46665 33.0761 9.51792 32.8404 9.52393C32.1402 9.53827 31.4399 9.53348 30.7407 9.5287C30.3915 9.52631 30.0426 9.52393 29.6941 9.52393C29.3651 9.52034 29.2616 9.6243 29.2616 9.94332C29.2813 10.536 29.2813 11.1334 29.2616 11.7356C29.2468 12.0762 29.3799 12.1658 29.7237 12.1658C30.1723 12.1658 30.6209 12.171 31.0695 12.1761ZM72.8363 13.3057C72.7706 12.8728 72.5538 12.4748 72.2221 12.178C71.8905 11.8813 71.464 11.7036 71.0136 11.6747C70.4005 11.6612 69.7884 11.6622 69.1762 11.6633H69.1761C68.6514 11.6642 68.1267 11.665 67.6012 11.6568C67.0244 11.6568 67.0207 11.6568 67.0207 11.0797V2.43718C67.025 2.0724 66.9688 1.70932 66.8543 1.3618C66.6905 0.904038 66.3603 0.519809 65.9255 0.280978C65.4907 0.0421483 64.981 -0.0349246 64.4919 0.0641752C64.0197 0.159136 63.5953 0.407956 63.2893 0.76925C62.9832 1.13054 62.814 1.58253 62.8097 2.05004V7.89653V13.6319C62.7931 13.9107 62.8374 14.1898 62.9398 14.4508C63.0422 14.7118 63.2003 14.9489 63.4038 15.1466C63.6074 15.3442 63.8516 15.498 64.1207 15.5977C64.3897 15.6974 64.6775 15.7409 64.9651 15.7253H70.6846C71.0068 15.7231 71.3266 15.6698 71.6311 15.5676C72.4851 15.2629 73.0064 14.2771 72.8363 13.3057ZM1.04485 7.6707C0.95395 7.81255 0.811458 7.91617 0.645553 7.96105C0.3239 8.00407 0.183408 7.81767 0.190802 7.49147V5.83897V4.18288V0.91731C0.177883 0.800485 0.192176 0.682338 0.232627 0.571581C0.273079 0.460825 0.338656 0.360285 0.424524 0.277376C0.510391 0.194467 0.614359 0.131302 0.72876 0.0925417C0.84316 0.0537809 0.965075 0.0404122 1.08552 0.0534215C1.55232 0.0534215 2.01953 0.0506367 2.48701 0.0478503C3.42281 0.0422726 4.35969 0.0366884 5.29658 0.0534215C5.53045 0.0800238 5.7442 0.194586 5.89183 0.372451C5.96947 0.47282 5.88443 0.759588 5.78461 0.906557C4.21208 3.16486 2.63216 5.41957 1.04485 7.6707Z"
        fill="#282828"
      />
    </svg>
  )
}

export const IconSearch = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M10 16C13.3137 16 16 13.3137 16 10C16 6.68629 13.3137 4 10 4C6.68629 4 4 6.68629 4 10C4 13.3137 6.68629 16 10 16Z"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M20 20L15 15"
        stroke="#282828"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
    </svg>
  )
}

export const ArrowLeft = () => {
  return (
    <svg
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="20"
        cy="20"
        r="20"
        transform="rotate(90 20 20)"
        fill="#373435"
        fillOpacity="0.7"
      />
      <path
        d="M25.3335 20L16.0002 20"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
        strokeLinejoin="round"
      />
      <path
        d="M20 24.6666L15.3333 19.9999L20 15.3333"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="square"
      />
    </svg>
  )
}

export const ArrowUpAcrodion = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M18 15L12 9L6 15"
        stroke="#040636"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}

export const ArrowDownAcordion = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M6 9L12 15L18 9"
        stroke="#040636"
        stroke-width="1.4"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}
